{
  //#region  //*=========== Commons ===========
  "Region": {
    "prefix": "reg",
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "body": [
      "//#region  //*=========== ${1} ===========",
      "${TM_SELECTED_TEXT}$0",
      "//#endregion  //*======== ${1} ==========="
    ]
  },
  "Region CSS": {
    "prefix": "regc",
    "scope": "css, scss",
    "body": [
      "/* #region  /**=========== ${1} =========== */",
      "${TM_SELECTED_TEXT}$0",
      "/* #endregion  /**======== ${1} =========== */"
    ]
  },
  //#endregion  //*======== Commons ===========

  //#region  //*=========== Next.js ===========
  "Next Pages": {
    "prefix": "np",
    "body": [
      "import * as React from 'react';\n",
      "import Layout from '@/components/layout/Layout';",
      "import Seo from '@/components/Seo';\n",
      "export default function ${1:${TM_FILENAME_BASE/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}}Page() {",
      "  return (",
      "    <Layout>",
      "      <Seo templateTitle='${1:${TM_FILENAME_BASE/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}}' />\n",
      "      <main>\n",
      "        <section className=''>",
      "          <div className='layout py-20 min-h-screen'>",
      "            $0",
      "          </div>",
      "        </section>",
      "      </main>",
      "    </Layout>",
      "  )",
      "}"
    ]
  },
  "Next API": {
    "prefix": "napi",
    "body": [
      "import { NextApiRequest, NextApiResponse } from 'next';\n",
      "export default async function handler(req: NextApiRequest, res: NextApiResponse) {",
      "  if (req.method === 'GET') {",
      "    res.status(200).json({ name: 'Bambang' });",
      "  } else {",
      "    res.status(405).json({ message: 'Method Not Allowed' });",
      "  }",
      "}"
    ]
  },
  // "Get Static Props": {
  //   "prefix": "ngsp",
  //   "body": [
  //     "export const getStaticProps = async (context: GetStaticPropsContext) => {",
  //     "  return {",
  //     "    props: {}",
  //     "  };",
  //     "}"
  //   ]
  // },
  // "Get Static Paths": {
  //   "prefix": "ngspa",
  //   "body": [
  //     "export const getStaticPaths: GetStaticPaths = async () => {",
  //     "  return {",
  //     "    paths: [",
  //     "      { params: { $1 }}",
  //     "    ],",
  //     "    fallback: ",
  //     "  };",
  //     "}"
  //   ]
  // },
  // "Get Server Side Props": {
  //   "prefix": "ngssp",
  //   "body": [
  //     "export const getServerSideProps = async (context: GetServerSidePropsContext) => {",
  //     "  return {",
  //     "    props: {}",
  //     "  };",
  //     "}"
  //   ]
  // },
  // "Infer Get Static Props": {
  //   "prefix": "nigsp",
  //   "body": "InferGetStaticPropsType<typeof getStaticProps>"
  // },
  // "Infer Get Server Side Props": {
  //   "prefix": "nigssp",
  //   "body": "InferGetServerSidePropsType<typeof getServerSideProps>"
  // },
  "Import useRouter": {
    "prefix": "nimust",
    "body": ["import { useRouter } from 'next/router';"]
  },
  //#endregion  //*======== Next.js ===========

  //#region  //*=========== Snippet Wrap ===========
  "Wrap with Fragment": {
    "prefix": "ff",
    "body": ["<>", "\t${TM_SELECTED_TEXT}", "</>"]
  },
  "Wrap with cn": {
    "prefix": "cn",
    "body": ["{cn(${TM_SELECTED_TEXT}$0)}"]
  },
  //#endregion  //*======== Snippet Wrap ===========

  "Logger": {
    "prefix": "lg",
    "body": [
      "logger({ ${1:${CLIPBOARD}} }, '${TM_FILENAME} line ${TM_LINE_NUMBER}')"
    ]
  }
}
